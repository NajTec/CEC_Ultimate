akka {
  loglevel = DEBUG
}

cassandra {
  cluster = "myhsiotaci.southcentralus.azurecontainer.io"
  port = 9042
}

iothub {

  // see: Endpoints ⇒ Messaging ⇒ Events ⇒ "Event Hub-compatible name"
  hubName = "myhsiothub"

  // see: Endpoints ⇒ Messaging ⇒ Events ⇒ "Event Hub-compatible endpoint"
  hubEndpoint = "Endpoint=sb://iothub-ns-myhsiothub-6934845-d4046aff22.servicebus.windows.net/;SharedAccessKeyName=iothubowner;SharedAccessKey=NgeR8a3GhdeBBWVeEYpUyG4irVlv3bimOkqxYFY0BzE=;EntityPath=myhsiothub"

  // see: Endpoints ⇒ Messaging ⇒ Events ⇒ Partitions
  hubPartitions = "4"

  // see: "IoT Hub" ⇒ your hub ⇒ "Shared access policies"
  // e.g. you should use the predefined "service" policy
  accessPolicy = "iothubowner"

  // see: Shared access policies ⇒ key name ⇒ Primary key
  accessKey = "NgeR8a3GhdeBBWVeEYpUyG4irVlv3bimOkqxYFY0BzE="

  // see: "IoT Hub" >> your hub > "Messaging" >> Consumer groups
  // "$Default" is predefined and is the typical scenario
  consumerGroup = "$Default"

  // Value expressed as a duration, e.g. 3s, 3000ms, "3 seconds", etc.
  receiverTimeout = 3s

  // How many messages to retrieve on each pull, max is 999
  receiverBatchSize = 999
}

iothub2cassandra {

  // Web service configuration
  http {
    interface = "myhsiotaci.southcentralus.azurecontainer.io"
    port = 9000
  }

  // Table where the service configuration is stored
  configTable: "tables",

  // Keyspace where the service configuration is store
  configKeyspace: "azureiothub2cassandra",

  // Tables to populate with IoT Hub telemetry. More tables can be added via the web service.
  tables: [
    {
      "table": "full_log",
      "keyspace": "mykeyspace",
      "contentType": "json",
      "columns": [
        {"name": "Zeitstempel", "type": "text", "source": "Received", "key":"Partition"},
        {"name" : "temperature", "source":"Content", "sourcePath":"temperature", "type":"double"},
        {"name": "humidity", "source":"Content", "sourcePath":"humidity", "type":"double"}
       ]
    }
  ]
}
